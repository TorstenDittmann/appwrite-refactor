{"version":3,"file":"sdk.js","sources":["../esm/sdk.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport class AppwriteException extends Error {\n    constructor(message, code = 0, response = '') {\n        super(message);\n        this.name = 'AppwriteException';\n        this.message = message;\n        this.code = code;\n        this.response = response;\n    }\n}\nexport class Appwrite {\n    constructor() {\n        this.config = {\n            endpoint: 'https://appwrite.io/v1',\n            project: '',\n            locale: '',\n        };\n        this.headers = new Headers({\n            'x-sdk-version': 'appwrite:web:2.0.0',\n        });\n        /**\n         * Set Project\n         *\n         * Your project ID\n         *\n         * @param value string\n         *\n         * @return this\n         */\n        this.setProject = (value) => {\n            this.headers.set('X-Appwrite-Project', value);\n            this.config.project = value;\n            return this;\n        };\n        /**\n         * Set Locale\n         *\n         * @param value string\n         *\n         * @return this\n         */\n        this.setLocale = (value) => {\n            this.headers.set('X-Appwrite-Locale', value);\n            this.config.locale = value;\n            return this;\n        };\n        this.account = {\n            /**\n             * Get Account\n             *\n             * Get currently logged in user data as JSON object.\n             *\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            get: () => __awaiter(this, void 0, void 0, function* () {\n                let path = '/account';\n                let payload = {};\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('get', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            }),\n            /**\n             * Create Account\n             *\n             * Use this endpoint to allow a new user to register a new account in your\n             * project. After the user registration completes successfully, you can use\n             * the [/account/verfication](/docs/client/account#accountCreateVerification)\n             * route to start verifying the user email address. To allow the new user to\n             * login to their new account, you need to create a new [account\n             * session](/docs/client/account#accountCreateSession).\n             *\n             * @param {string} email\n             * @param {string} password\n             * @param {string} name\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            create: (email, password, name = '') => __awaiter(this, void 0, void 0, function* () {\n                if (email === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"email\"');\n                }\n                if (password === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"password\"');\n                }\n                let path = '/account';\n                let payload = {};\n                if (typeof email !== 'undefined') {\n                    payload['email'] = email;\n                }\n                if (typeof password !== 'undefined') {\n                    payload['password'] = password;\n                }\n                if (typeof name !== 'undefined') {\n                    payload['name'] = name;\n                }\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('post', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            }),\n            /**\n             * Delete Account\n             *\n             * Delete a currently logged in user account. Behind the scene, the user\n             * record is not deleted but permanently blocked from any access. This is done\n             * to avoid deleted accounts being overtaken by new users with the same email\n             * address. Any user-related resources like documents or storage files should\n             * be deleted separately.\n             *\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            delete: () => __awaiter(this, void 0, void 0, function* () {\n                let path = '/account';\n                let payload = {};\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('delete', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            }),\n            /**\n             * Update Account Email\n             *\n             * Update currently logged in user account email address. After changing user\n             * address, user confirmation status is being reset and a new confirmation\n             * mail is sent. For security measures, user password is required to complete\n             * this request.\n             *\n             * @param {string} email\n             * @param {string} password\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            updateEmail: (email, password) => __awaiter(this, void 0, void 0, function* () {\n                if (email === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"email\"');\n                }\n                if (password === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"password\"');\n                }\n                let path = '/account/email';\n                let payload = {};\n                if (typeof email !== 'undefined') {\n                    payload['email'] = email;\n                }\n                if (typeof password !== 'undefined') {\n                    payload['password'] = password;\n                }\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('patch', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            }),\n            /**\n             * Get Account Logs\n             *\n             * Get currently logged in user list of latest security activity logs. Each\n             * log returns user IP address, location and date and time of log.\n             *\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            getLogs: () => __awaiter(this, void 0, void 0, function* () {\n                let path = '/account/logs';\n                let payload = {};\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('get', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            }),\n            /**\n             * Update Account Name\n             *\n             * Update currently logged in user account name.\n             *\n             * @param {string} name\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            updateName: (name) => __awaiter(this, void 0, void 0, function* () {\n                if (name === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"name\"');\n                }\n                let path = '/account/name';\n                let payload = {};\n                if (typeof name !== 'undefined') {\n                    payload['name'] = name;\n                }\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('patch', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            }),\n            /**\n             * Update Account Password\n             *\n             * Update currently logged in user password. For validation, user is required\n             * to pass the password twice.\n             *\n             * @param {string} password\n             * @param {string} oldPassword\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            updatePassword: (password, oldPassword) => __awaiter(this, void 0, void 0, function* () {\n                if (password === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"password\"');\n                }\n                if (oldPassword === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"oldPassword\"');\n                }\n                let path = '/account/password';\n                let payload = {};\n                if (typeof password !== 'undefined') {\n                    payload['password'] = password;\n                }\n                if (typeof oldPassword !== 'undefined') {\n                    payload['oldPassword'] = oldPassword;\n                }\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('patch', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            }),\n            /**\n             * Get Account Preferences\n             *\n             * Get currently logged in user preferences as a key-value object.\n             *\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            getPrefs: () => __awaiter(this, void 0, void 0, function* () {\n                let path = '/account/prefs';\n                let payload = {};\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('get', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            }),\n            /**\n             * Update Account Preferences\n             *\n             * Update currently logged in user account preferences. You can pass only the\n             * specific settings you wish to update.\n             *\n             * @param {object} prefs\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            updatePrefs: (prefs) => __awaiter(this, void 0, void 0, function* () {\n                if (prefs === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"prefs\"');\n                }\n                let path = '/account/prefs';\n                let payload = {};\n                if (typeof prefs !== 'undefined') {\n                    payload['prefs'] = prefs;\n                }\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('patch', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            }),\n            /**\n             * Create Password Recovery\n             *\n             * Sends the user an email with a temporary secret key for password reset.\n             * When the user clicks the confirmation link he is redirected back to your\n             * app password reset URL with the secret key and email address values\n             * attached to the URL query string. Use the query string params to submit a\n             * request to the [PUT\n             * /account/recovery](/docs/client/account#accountUpdateRecovery) endpoint to\n             * complete the process.\n             *\n             * @param {string} email\n             * @param {string} url\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            createRecovery: (email, url) => __awaiter(this, void 0, void 0, function* () {\n                if (email === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"email\"');\n                }\n                if (url === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"url\"');\n                }\n                let path = '/account/recovery';\n                let payload = {};\n                if (typeof email !== 'undefined') {\n                    payload['email'] = email;\n                }\n                if (typeof url !== 'undefined') {\n                    payload['url'] = url;\n                }\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('post', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            }),\n            /**\n             * Complete Password Recovery\n             *\n             * Use this endpoint to complete the user account password reset. Both the\n             * **userId** and **secret** arguments will be passed as query parameters to\n             * the redirect URL you have provided when sending your request to the [POST\n             * /account/recovery](/docs/client/account#accountCreateRecovery) endpoint.\n             *\n             * Please note that in order to avoid a [Redirect\n             * Attack](https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.md)\n             * the only valid redirect URLs are the ones from domains you have set when\n             * adding your platforms in the console interface.\n             *\n             * @param {string} userId\n             * @param {string} secret\n             * @param {string} password\n             * @param {string} passwordAgain\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            updateRecovery: (userId, secret, password, passwordAgain) => __awaiter(this, void 0, void 0, function* () {\n                if (userId === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"userId\"');\n                }\n                if (secret === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"secret\"');\n                }\n                if (password === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"password\"');\n                }\n                if (passwordAgain === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"passwordAgain\"');\n                }\n                let path = '/account/recovery';\n                let payload = {};\n                if (typeof userId !== 'undefined') {\n                    payload['userId'] = userId;\n                }\n                if (typeof secret !== 'undefined') {\n                    payload['secret'] = secret;\n                }\n                if (typeof password !== 'undefined') {\n                    payload['password'] = password;\n                }\n                if (typeof passwordAgain !== 'undefined') {\n                    payload['passwordAgain'] = passwordAgain;\n                }\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('put', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            }),\n            /**\n             * Get Account Sessions\n             *\n             * Get currently logged in user list of active sessions across different\n             * devices.\n             *\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            getSessions: () => __awaiter(this, void 0, void 0, function* () {\n                let path = '/account/sessions';\n                let payload = {};\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('get', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            }),\n            /**\n             * Create Account Session\n             *\n             * Allow the user to login into their account by providing a valid email and\n             * password combination. This route will create a new session for the user.\n             *\n             * @param {string} email\n             * @param {string} password\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            createSession: (email, password) => __awaiter(this, void 0, void 0, function* () {\n                if (email === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"email\"');\n                }\n                if (password === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"password\"');\n                }\n                let path = '/account/sessions';\n                let payload = {};\n                if (typeof email !== 'undefined') {\n                    payload['email'] = email;\n                }\n                if (typeof password !== 'undefined') {\n                    payload['password'] = password;\n                }\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('post', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            }),\n            /**\n             * Delete All Account Sessions\n             *\n             * Delete all sessions from the user account and remove any sessions cookies\n             * from the end client.\n             *\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            deleteSessions: () => __awaiter(this, void 0, void 0, function* () {\n                let path = '/account/sessions';\n                let payload = {};\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('delete', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            }),\n            /**\n             * Create Account Session with OAuth2\n             *\n             * Allow the user to login to their account using the OAuth2 provider of their\n             * choice. Each OAuth2 provider should be enabled from the Appwrite console\n             * first. Use the success and failure arguments to provide a redirect URL's\n             * back to your app when login is completed.\n             *\n             * @param {string} provider\n             * @param {string} success\n             * @param {string} failure\n             * @param {string[]} scopes\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            createOAuth2Session: (provider, success = 'https://appwrite.io/auth/oauth2/success', failure = 'https://appwrite.io/auth/oauth2/failure', scopes = []) => {\n                if (provider === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"provider\"');\n                }\n                let path = '/account/sessions/oauth2/{provider}'.replace(new RegExp('{provider}', 'g'), provider);\n                let payload = {};\n                if (success) {\n                    payload['success'] = success;\n                }\n                if (failure) {\n                    payload['failure'] = failure;\n                }\n                if (scopes) {\n                    payload['scopes'] = scopes;\n                }\n                const uri = new URL(this.config.endpoint + path);\n                payload['project'] = this.config.project;\n                const query = new URLSearchParams(payload);\n                uri.search = query.toString();\n                window.location.href = uri.toString();\n            },\n            /**\n             * Delete Account Session\n             *\n             * Use this endpoint to log out the currently logged in user from all their\n             * account sessions across all of their different devices. When using the\n             * option id argument, only the session unique ID provider will be deleted.\n             *\n             * @param {string} sessionId\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            deleteSession: (sessionId) => __awaiter(this, void 0, void 0, function* () {\n                if (sessionId === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"sessionId\"');\n                }\n                let path = '/account/sessions/{sessionId}'.replace(new RegExp('{sessionId}', 'g'), sessionId);\n                let payload = {};\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('delete', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            }),\n            /**\n             * Create Email Verification\n             *\n             * Use this endpoint to send a verification message to your user email address\n             * to confirm they are the valid owners of that address. Both the **userId**\n             * and **secret** arguments will be passed as query parameters to the URL you\n             * have provided to be attached to the verification email. The provided URL\n             * should redirect the user back to your app and allow you to complete the\n             * verification process by verifying both the **userId** and **secret**\n             * parameters. Learn more about how to [complete the verification\n             * process](/docs/client/account#accountUpdateVerification).\n             *\n             * Please note that in order to avoid a [Redirect\n             * Attack](https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.md),\n             * the only valid redirect URLs are the ones from domains you have set when\n             * adding your platforms in the console interface.\n             *\n             *\n             * @param {string} url\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            createVerification: (url) => __awaiter(this, void 0, void 0, function* () {\n                if (url === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"url\"');\n                }\n                let path = '/account/verification';\n                let payload = {};\n                if (typeof url !== 'undefined') {\n                    payload['url'] = url;\n                }\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('post', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            }),\n            /**\n             * Complete Email Verification\n             *\n             * Use this endpoint to complete the user email verification process. Use both\n             * the **userId** and **secret** parameters that were attached to your app URL\n             * to verify the user email ownership. If confirmed this route will return a\n             * 200 status code.\n             *\n             * @param {string} userId\n             * @param {string} secret\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            updateVerification: (userId, secret) => __awaiter(this, void 0, void 0, function* () {\n                if (userId === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"userId\"');\n                }\n                if (secret === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"secret\"');\n                }\n                let path = '/account/verification';\n                let payload = {};\n                if (typeof userId !== 'undefined') {\n                    payload['userId'] = userId;\n                }\n                if (typeof secret !== 'undefined') {\n                    payload['secret'] = secret;\n                }\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('put', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            })\n        };\n        this.avatars = {\n            /**\n             * Get Browser Icon\n             *\n             * You can use this endpoint to show different browser icons to your users.\n             * The code argument receives the browser code as it appears in your user\n             * /account/sessions endpoint. Use width, height and quality arguments to\n             * change the output settings.\n             *\n             * @param {string} code\n             * @param {number} width\n             * @param {number} height\n             * @param {number} quality\n             * @throws {AppwriteException}\n             * @return {string}\n             */\n            getBrowser: (code, width = 100, height = 100, quality = 100) => {\n                if (code === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"code\"');\n                }\n                let path = '/avatars/browsers/{code}'.replace(new RegExp('{code}', 'g'), code);\n                let payload = {};\n                if (width) {\n                    payload['width'] = width;\n                }\n                if (height) {\n                    payload['height'] = height;\n                }\n                if (quality) {\n                    payload['quality'] = quality;\n                }\n                const uri = new URL(this.config.endpoint + path);\n                payload['project'] = this.config.project;\n                const query = new URLSearchParams(payload);\n                uri.search = query.toString();\n                return uri;\n            },\n            /**\n             * Get Credit Card Icon\n             *\n             * The credit card endpoint will return you the icon of the credit card\n             * provider you need. Use width, height and quality arguments to change the\n             * output settings.\n             *\n             * @param {string} code\n             * @param {number} width\n             * @param {number} height\n             * @param {number} quality\n             * @throws {AppwriteException}\n             * @return {string}\n             */\n            getCreditCard: (code, width = 100, height = 100, quality = 100) => {\n                if (code === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"code\"');\n                }\n                let path = '/avatars/credit-cards/{code}'.replace(new RegExp('{code}', 'g'), code);\n                let payload = {};\n                if (width) {\n                    payload['width'] = width;\n                }\n                if (height) {\n                    payload['height'] = height;\n                }\n                if (quality) {\n                    payload['quality'] = quality;\n                }\n                const uri = new URL(this.config.endpoint + path);\n                payload['project'] = this.config.project;\n                const query = new URLSearchParams(payload);\n                uri.search = query.toString();\n                return uri;\n            },\n            /**\n             * Get Favicon\n             *\n             * Use this endpoint to fetch the favorite icon (AKA favicon) of any remote\n             * website URL.\n             *\n             *\n             * @param {string} url\n             * @throws {AppwriteException}\n             * @return {string}\n             */\n            getFavicon: (url) => {\n                if (url === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"url\"');\n                }\n                let path = '/avatars/favicon';\n                let payload = {};\n                if (url) {\n                    payload['url'] = url;\n                }\n                const uri = new URL(this.config.endpoint + path);\n                payload['project'] = this.config.project;\n                const query = new URLSearchParams(payload);\n                uri.search = query.toString();\n                return uri;\n            },\n            /**\n             * Get Country Flag\n             *\n             * You can use this endpoint to show different country flags icons to your\n             * users. The code argument receives the 2 letter country code. Use width,\n             * height and quality arguments to change the output settings.\n             *\n             * @param {string} code\n             * @param {number} width\n             * @param {number} height\n             * @param {number} quality\n             * @throws {AppwriteException}\n             * @return {string}\n             */\n            getFlag: (code, width = 100, height = 100, quality = 100) => {\n                if (code === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"code\"');\n                }\n                let path = '/avatars/flags/{code}'.replace(new RegExp('{code}', 'g'), code);\n                let payload = {};\n                if (width) {\n                    payload['width'] = width;\n                }\n                if (height) {\n                    payload['height'] = height;\n                }\n                if (quality) {\n                    payload['quality'] = quality;\n                }\n                const uri = new URL(this.config.endpoint + path);\n                payload['project'] = this.config.project;\n                const query = new URLSearchParams(payload);\n                uri.search = query.toString();\n                return uri;\n            },\n            /**\n             * Get Image from URL\n             *\n             * Use this endpoint to fetch a remote image URL and crop it to any image size\n             * you want. This endpoint is very useful if you need to crop and display\n             * remote images in your app or in case you want to make sure a 3rd party\n             * image is properly served using a TLS protocol.\n             *\n             * @param {string} url\n             * @param {number} width\n             * @param {number} height\n             * @throws {AppwriteException}\n             * @return {string}\n             */\n            getImage: (url, width = 400, height = 400) => {\n                if (url === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"url\"');\n                }\n                let path = '/avatars/image';\n                let payload = {};\n                if (url) {\n                    payload['url'] = url;\n                }\n                if (width) {\n                    payload['width'] = width;\n                }\n                if (height) {\n                    payload['height'] = height;\n                }\n                const uri = new URL(this.config.endpoint + path);\n                payload['project'] = this.config.project;\n                const query = new URLSearchParams(payload);\n                uri.search = query.toString();\n                return uri;\n            },\n            /**\n             * Get User Initials\n             *\n             * Use this endpoint to show your user initials avatar icon on your website or\n             * app. By default, this route will try to print your logged-in user name or\n             * email initials. You can also overwrite the user name if you pass the 'name'\n             * parameter. If no name is given and no user is logged, an empty avatar will\n             * be returned.\n             *\n             * You can use the color and background params to change the avatar colors. By\n             * default, a random theme will be selected. The random theme will persist for\n             * the user's initials when reloading the same theme will always return for\n             * the same initials.\n             *\n             * @param {string} name\n             * @param {number} width\n             * @param {number} height\n             * @param {string} color\n             * @param {string} background\n             * @throws {AppwriteException}\n             * @return {string}\n             */\n            getInitials: (name = '', width = 500, height = 500, color = '', background = '') => {\n                let path = '/avatars/initials';\n                let payload = {};\n                if (name) {\n                    payload['name'] = name;\n                }\n                if (width) {\n                    payload['width'] = width;\n                }\n                if (height) {\n                    payload['height'] = height;\n                }\n                if (color) {\n                    payload['color'] = color;\n                }\n                if (background) {\n                    payload['background'] = background;\n                }\n                const uri = new URL(this.config.endpoint + path);\n                payload['project'] = this.config.project;\n                const query = new URLSearchParams(payload);\n                uri.search = query.toString();\n                return uri;\n            },\n            /**\n             * Get QR Code\n             *\n             * Converts a given plain text to a QR code image. You can use the query\n             * parameters to change the size and style of the resulting image.\n             *\n             * @param {string} text\n             * @param {number} size\n             * @param {number} margin\n             * @param {boolean} download\n             * @throws {AppwriteException}\n             * @return {string}\n             */\n            getQR: (text, size = 400, margin = 1, download = false) => {\n                if (text === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"text\"');\n                }\n                let path = '/avatars/qr';\n                let payload = {};\n                if (text) {\n                    payload['text'] = text;\n                }\n                if (size) {\n                    payload['size'] = size;\n                }\n                if (margin) {\n                    payload['margin'] = margin;\n                }\n                if (download) {\n                    payload['download'] = download;\n                }\n                const uri = new URL(this.config.endpoint + path);\n                payload['project'] = this.config.project;\n                const query = new URLSearchParams(payload);\n                uri.search = query.toString();\n                return uri;\n            }\n        };\n        this.database = {\n            /**\n             * List Documents\n             *\n             * Get a list of all the user documents. You can use the query params to\n             * filter your results. On admin mode, this endpoint will return a list of all\n             * of the project's documents. [Learn more about different API\n             * modes](/docs/admin).\n             *\n             * @param {string} collectionId\n             * @param {string[]} filters\n             * @param {number} limit\n             * @param {number} offset\n             * @param {string} orderField\n             * @param {string} orderType\n             * @param {string} orderCast\n             * @param {string} search\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            listDocuments: (collectionId, filters = [], limit = 25, offset = 0, orderField = '', orderType = 'ASC', orderCast = 'string', search = '') => __awaiter(this, void 0, void 0, function* () {\n                if (collectionId === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"collectionId\"');\n                }\n                let path = '/database/collections/{collectionId}/documents'.replace(new RegExp('{collectionId}', 'g'), collectionId);\n                let payload = {};\n                if (filters) {\n                    payload['filters'] = filters;\n                }\n                if (limit) {\n                    payload['limit'] = limit;\n                }\n                if (offset) {\n                    payload['offset'] = offset;\n                }\n                if (orderField) {\n                    payload['orderField'] = orderField;\n                }\n                if (orderType) {\n                    payload['orderType'] = orderType;\n                }\n                if (orderCast) {\n                    payload['orderCast'] = orderCast;\n                }\n                if (search) {\n                    payload['search'] = search;\n                }\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('get', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            }),\n            /**\n             * Create Document\n             *\n             * Create a new Document. Before using this route, you should create a new\n             * collection resource using either a [server\n             * integration](/docs/server/database#databaseCreateCollection) API or\n             * directly from your database console.\n             *\n             * @param {string} collectionId\n             * @param {object} data\n             * @param {string[]} read\n             * @param {string[]} write\n             * @param {string} parentDocument\n             * @param {string} parentProperty\n             * @param {string} parentPropertyType\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            createDocument: (collectionId, data, read, write, parentDocument = '', parentProperty = '', parentPropertyType = 'assign') => __awaiter(this, void 0, void 0, function* () {\n                if (collectionId === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"collectionId\"');\n                }\n                if (data === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"data\"');\n                }\n                if (read === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"read\"');\n                }\n                if (write === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"write\"');\n                }\n                let path = '/database/collections/{collectionId}/documents'.replace(new RegExp('{collectionId}', 'g'), collectionId);\n                let payload = {};\n                if (typeof data !== 'undefined') {\n                    payload['data'] = data;\n                }\n                if (typeof read !== 'undefined') {\n                    payload['read'] = read;\n                }\n                if (typeof write !== 'undefined') {\n                    payload['write'] = write;\n                }\n                if (typeof parentDocument !== 'undefined') {\n                    payload['parentDocument'] = parentDocument;\n                }\n                if (typeof parentProperty !== 'undefined') {\n                    payload['parentProperty'] = parentProperty;\n                }\n                if (typeof parentPropertyType !== 'undefined') {\n                    payload['parentPropertyType'] = parentPropertyType;\n                }\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('post', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            }),\n            /**\n             * Get Document\n             *\n             * Get a document by its unique ID. This endpoint response returns a JSON\n             * object with the document data.\n             *\n             * @param {string} collectionId\n             * @param {string} documentId\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            getDocument: (collectionId, documentId) => __awaiter(this, void 0, void 0, function* () {\n                if (collectionId === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"collectionId\"');\n                }\n                if (documentId === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"documentId\"');\n                }\n                let path = '/database/collections/{collectionId}/documents/{documentId}'.replace(new RegExp('{collectionId}', 'g'), collectionId).replace(new RegExp('{documentId}', 'g'), documentId);\n                let payload = {};\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('get', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            }),\n            /**\n             * Update Document\n             *\n             * Update a document by its unique ID. Using the patch method you can pass\n             * only specific fields that will get updated.\n             *\n             * @param {string} collectionId\n             * @param {string} documentId\n             * @param {object} data\n             * @param {string[]} read\n             * @param {string[]} write\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            updateDocument: (collectionId, documentId, data, read, write) => __awaiter(this, void 0, void 0, function* () {\n                if (collectionId === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"collectionId\"');\n                }\n                if (documentId === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"documentId\"');\n                }\n                if (data === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"data\"');\n                }\n                if (read === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"read\"');\n                }\n                if (write === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"write\"');\n                }\n                let path = '/database/collections/{collectionId}/documents/{documentId}'.replace(new RegExp('{collectionId}', 'g'), collectionId).replace(new RegExp('{documentId}', 'g'), documentId);\n                let payload = {};\n                if (typeof data !== 'undefined') {\n                    payload['data'] = data;\n                }\n                if (typeof read !== 'undefined') {\n                    payload['read'] = read;\n                }\n                if (typeof write !== 'undefined') {\n                    payload['write'] = write;\n                }\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('patch', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            }),\n            /**\n             * Delete Document\n             *\n             * Delete a document by its unique ID. This endpoint deletes only the parent\n             * documents, its attributes and relations to other documents. Child documents\n             * **will not** be deleted.\n             *\n             * @param {string} collectionId\n             * @param {string} documentId\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            deleteDocument: (collectionId, documentId) => __awaiter(this, void 0, void 0, function* () {\n                if (collectionId === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"collectionId\"');\n                }\n                if (documentId === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"documentId\"');\n                }\n                let path = '/database/collections/{collectionId}/documents/{documentId}'.replace(new RegExp('{collectionId}', 'g'), collectionId).replace(new RegExp('{documentId}', 'g'), documentId);\n                let payload = {};\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('delete', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            })\n        };\n        this.functions = {\n            /**\n             * List Executions\n             *\n             * Get a list of all the current user function execution logs. You can use the\n             * query params to filter your results. On admin mode, this endpoint will\n             * return a list of all of the project's teams. [Learn more about different\n             * API modes](/docs/admin).\n             *\n             * @param {string} functionId\n             * @param {string} search\n             * @param {number} limit\n             * @param {number} offset\n             * @param {string} orderType\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            listExecutions: (functionId, search = '', limit = 25, offset = 0, orderType = 'ASC') => __awaiter(this, void 0, void 0, function* () {\n                if (functionId === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"functionId\"');\n                }\n                let path = '/functions/{functionId}/executions'.replace(new RegExp('{functionId}', 'g'), functionId);\n                let payload = {};\n                if (search) {\n                    payload['search'] = search;\n                }\n                if (limit) {\n                    payload['limit'] = limit;\n                }\n                if (offset) {\n                    payload['offset'] = offset;\n                }\n                if (orderType) {\n                    payload['orderType'] = orderType;\n                }\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('get', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            }),\n            /**\n             * Create Execution\n             *\n             * Trigger a function execution. The returned object will return you the\n             * current execution status. You can ping the `Get Execution` endpoint to get\n             * updates on the current execution status. Once this endpoint is called, your\n             * function execution process will start asynchronously.\n             *\n             * @param {string} functionId\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            createExecution: (functionId) => __awaiter(this, void 0, void 0, function* () {\n                if (functionId === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"functionId\"');\n                }\n                let path = '/functions/{functionId}/executions'.replace(new RegExp('{functionId}', 'g'), functionId);\n                let payload = {};\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('post', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            }),\n            /**\n             * Get Execution\n             *\n             * Get a function execution log by its unique ID.\n             *\n             * @param {string} functionId\n             * @param {string} executionId\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            getExecution: (functionId, executionId) => __awaiter(this, void 0, void 0, function* () {\n                if (functionId === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"functionId\"');\n                }\n                if (executionId === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"executionId\"');\n                }\n                let path = '/functions/{functionId}/executions/{executionId}'.replace(new RegExp('{functionId}', 'g'), functionId).replace(new RegExp('{executionId}', 'g'), executionId);\n                let payload = {};\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('get', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            })\n        };\n        this.locale = {\n            /**\n             * Get User Locale\n             *\n             * Get the current user location based on IP. Returns an object with user\n             * country code, country name, continent name, continent code, ip address and\n             * suggested currency. You can use the locale header to get the data in a\n             * supported language.\n             *\n             * ([IP Geolocation by DB-IP](https://db-ip.com))\n             *\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            get: () => __awaiter(this, void 0, void 0, function* () {\n                let path = '/locale';\n                let payload = {};\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('get', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            }),\n            /**\n             * List Continents\n             *\n             * List of all continents. You can use the locale header to get the data in a\n             * supported language.\n             *\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            getContinents: () => __awaiter(this, void 0, void 0, function* () {\n                let path = '/locale/continents';\n                let payload = {};\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('get', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            }),\n            /**\n             * List Countries\n             *\n             * List of all countries. You can use the locale header to get the data in a\n             * supported language.\n             *\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            getCountries: () => __awaiter(this, void 0, void 0, function* () {\n                let path = '/locale/countries';\n                let payload = {};\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('get', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            }),\n            /**\n             * List EU Countries\n             *\n             * List of all countries that are currently members of the EU. You can use the\n             * locale header to get the data in a supported language.\n             *\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            getCountriesEU: () => __awaiter(this, void 0, void 0, function* () {\n                let path = '/locale/countries/eu';\n                let payload = {};\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('get', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            }),\n            /**\n             * List Countries Phone Codes\n             *\n             * List of all countries phone codes. You can use the locale header to get the\n             * data in a supported language.\n             *\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            getCountriesPhones: () => __awaiter(this, void 0, void 0, function* () {\n                let path = '/locale/countries/phones';\n                let payload = {};\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('get', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            }),\n            /**\n             * List Currencies\n             *\n             * List of all currencies, including currency symbol, name, plural, and\n             * decimal digits for all major and minor currencies. You can use the locale\n             * header to get the data in a supported language.\n             *\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            getCurrencies: () => __awaiter(this, void 0, void 0, function* () {\n                let path = '/locale/currencies';\n                let payload = {};\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('get', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            }),\n            /**\n             * List Languages\n             *\n             * List of all languages classified by ISO 639-1 including 2-letter code, name\n             * in English, and name in the respective language.\n             *\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            getLanguages: () => __awaiter(this, void 0, void 0, function* () {\n                let path = '/locale/languages';\n                let payload = {};\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('get', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            })\n        };\n        this.storage = {\n            /**\n             * List Files\n             *\n             * Get a list of all the user files. You can use the query params to filter\n             * your results. On admin mode, this endpoint will return a list of all of the\n             * project's files. [Learn more about different API modes](/docs/admin).\n             *\n             * @param {string} search\n             * @param {number} limit\n             * @param {number} offset\n             * @param {string} orderType\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            listFiles: (search = '', limit = 25, offset = 0, orderType = 'ASC') => __awaiter(this, void 0, void 0, function* () {\n                let path = '/storage/files';\n                let payload = {};\n                if (search) {\n                    payload['search'] = search;\n                }\n                if (limit) {\n                    payload['limit'] = limit;\n                }\n                if (offset) {\n                    payload['offset'] = offset;\n                }\n                if (orderType) {\n                    payload['orderType'] = orderType;\n                }\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('get', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            }),\n            /**\n             * Create File\n             *\n             * Create a new file. The user who creates the file will automatically be\n             * assigned to read and write access unless he has passed custom values for\n             * read and write arguments.\n             *\n             * @param {File} file\n             * @param {string[]} read\n             * @param {string[]} write\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            createFile: (file, read, write) => __awaiter(this, void 0, void 0, function* () {\n                if (file === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"file\"');\n                }\n                if (read === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"read\"');\n                }\n                if (write === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"write\"');\n                }\n                let path = '/storage/files';\n                let payload = {};\n                if (typeof file !== 'undefined') {\n                    payload['file'] = file;\n                }\n                if (typeof read !== 'undefined') {\n                    payload['read'] = read;\n                }\n                if (typeof write !== 'undefined') {\n                    payload['write'] = write;\n                }\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('post', uri, new Headers({\n                    'content-type': 'multipart/form-data',\n                }), payload);\n            }),\n            /**\n             * Get File\n             *\n             * Get a file by its unique ID. This endpoint response returns a JSON object\n             * with the file metadata.\n             *\n             * @param {string} fileId\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            getFile: (fileId) => __awaiter(this, void 0, void 0, function* () {\n                if (fileId === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"fileId\"');\n                }\n                let path = '/storage/files/{fileId}'.replace(new RegExp('{fileId}', 'g'), fileId);\n                let payload = {};\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('get', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            }),\n            /**\n             * Update File\n             *\n             * Update a file by its unique ID. Only users with write permissions have\n             * access to update this resource.\n             *\n             * @param {string} fileId\n             * @param {string[]} read\n             * @param {string[]} write\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            updateFile: (fileId, read, write) => __awaiter(this, void 0, void 0, function* () {\n                if (fileId === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"fileId\"');\n                }\n                if (read === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"read\"');\n                }\n                if (write === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"write\"');\n                }\n                let path = '/storage/files/{fileId}'.replace(new RegExp('{fileId}', 'g'), fileId);\n                let payload = {};\n                if (typeof read !== 'undefined') {\n                    payload['read'] = read;\n                }\n                if (typeof write !== 'undefined') {\n                    payload['write'] = write;\n                }\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('put', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            }),\n            /**\n             * Delete File\n             *\n             * Delete a file by its unique ID. Only users with write permissions have\n             * access to delete this resource.\n             *\n             * @param {string} fileId\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            deleteFile: (fileId) => __awaiter(this, void 0, void 0, function* () {\n                if (fileId === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"fileId\"');\n                }\n                let path = '/storage/files/{fileId}'.replace(new RegExp('{fileId}', 'g'), fileId);\n                let payload = {};\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('delete', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            }),\n            /**\n             * Get File for Download\n             *\n             * Get a file content by its unique ID. The endpoint response return with a\n             * 'Content-Disposition: attachment' header that tells the browser to start\n             * downloading the file to user downloads directory.\n             *\n             * @param {string} fileId\n             * @throws {AppwriteException}\n             * @return {string}\n             */\n            getFileDownload: (fileId) => {\n                if (fileId === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"fileId\"');\n                }\n                let path = '/storage/files/{fileId}/download'.replace(new RegExp('{fileId}', 'g'), fileId);\n                let payload = {};\n                const uri = new URL(this.config.endpoint + path);\n                payload['project'] = this.config.project;\n                const query = new URLSearchParams(payload);\n                uri.search = query.toString();\n                return uri;\n            },\n            /**\n             * Get File Preview\n             *\n             * Get a file preview image. Currently, this method supports preview for image\n             * files (jpg, png, and gif), other supported formats, like pdf, docs, slides,\n             * and spreadsheets, will return the file icon image. You can also pass query\n             * string arguments for cutting and resizing your preview image.\n             *\n             * @param {string} fileId\n             * @param {number} width\n             * @param {number} height\n             * @param {number} quality\n             * @param {string} background\n             * @param {string} output\n             * @throws {AppwriteException}\n             * @return {string}\n             */\n            getFilePreview: (fileId, width = 0, height = 0, quality = 100, background = '', output = '') => {\n                if (fileId === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"fileId\"');\n                }\n                let path = '/storage/files/{fileId}/preview'.replace(new RegExp('{fileId}', 'g'), fileId);\n                let payload = {};\n                if (width) {\n                    payload['width'] = width;\n                }\n                if (height) {\n                    payload['height'] = height;\n                }\n                if (quality) {\n                    payload['quality'] = quality;\n                }\n                if (background) {\n                    payload['background'] = background;\n                }\n                if (output) {\n                    payload['output'] = output;\n                }\n                const uri = new URL(this.config.endpoint + path);\n                payload['project'] = this.config.project;\n                const query = new URLSearchParams(payload);\n                uri.search = query.toString();\n                return uri;\n            },\n            /**\n             * Get File for View\n             *\n             * Get a file content by its unique ID. This endpoint is similar to the\n             * download method but returns with no  'Content-Disposition: attachment'\n             * header.\n             *\n             * @param {string} fileId\n             * @throws {AppwriteException}\n             * @return {string}\n             */\n            getFileView: (fileId) => {\n                if (fileId === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"fileId\"');\n                }\n                let path = '/storage/files/{fileId}/view'.replace(new RegExp('{fileId}', 'g'), fileId);\n                let payload = {};\n                const uri = new URL(this.config.endpoint + path);\n                payload['project'] = this.config.project;\n                const query = new URLSearchParams(payload);\n                uri.search = query.toString();\n                return uri;\n            }\n        };\n        this.teams = {\n            /**\n             * List Teams\n             *\n             * Get a list of all the current user teams. You can use the query params to\n             * filter your results. On admin mode, this endpoint will return a list of all\n             * of the project's teams. [Learn more about different API\n             * modes](/docs/admin).\n             *\n             * @param {string} search\n             * @param {number} limit\n             * @param {number} offset\n             * @param {string} orderType\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            list: (search = '', limit = 25, offset = 0, orderType = 'ASC') => __awaiter(this, void 0, void 0, function* () {\n                let path = '/teams';\n                let payload = {};\n                if (search) {\n                    payload['search'] = search;\n                }\n                if (limit) {\n                    payload['limit'] = limit;\n                }\n                if (offset) {\n                    payload['offset'] = offset;\n                }\n                if (orderType) {\n                    payload['orderType'] = orderType;\n                }\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('get', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            }),\n            /**\n             * Create Team\n             *\n             * Create a new team. The user who creates the team will automatically be\n             * assigned as the owner of the team. The team owner can invite new members,\n             * who will be able add new owners and update or delete the team from your\n             * project.\n             *\n             * @param {string} name\n             * @param {string[]} roles\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            create: (name, roles = [\"owner\"]) => __awaiter(this, void 0, void 0, function* () {\n                if (name === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"name\"');\n                }\n                let path = '/teams';\n                let payload = {};\n                if (typeof name !== 'undefined') {\n                    payload['name'] = name;\n                }\n                if (typeof roles !== 'undefined') {\n                    payload['roles'] = roles;\n                }\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('post', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            }),\n            /**\n             * Get Team\n             *\n             * Get a team by its unique ID. All team members have read access for this\n             * resource.\n             *\n             * @param {string} teamId\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            get: (teamId) => __awaiter(this, void 0, void 0, function* () {\n                if (teamId === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"teamId\"');\n                }\n                let path = '/teams/{teamId}'.replace(new RegExp('{teamId}', 'g'), teamId);\n                let payload = {};\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('get', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            }),\n            /**\n             * Update Team\n             *\n             * Update a team by its unique ID. Only team owners have write access for this\n             * resource.\n             *\n             * @param {string} teamId\n             * @param {string} name\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            update: (teamId, name) => __awaiter(this, void 0, void 0, function* () {\n                if (teamId === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"teamId\"');\n                }\n                if (name === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"name\"');\n                }\n                let path = '/teams/{teamId}'.replace(new RegExp('{teamId}', 'g'), teamId);\n                let payload = {};\n                if (typeof name !== 'undefined') {\n                    payload['name'] = name;\n                }\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('put', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            }),\n            /**\n             * Delete Team\n             *\n             * Delete a team by its unique ID. Only team owners have write access for this\n             * resource.\n             *\n             * @param {string} teamId\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            delete: (teamId) => __awaiter(this, void 0, void 0, function* () {\n                if (teamId === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"teamId\"');\n                }\n                let path = '/teams/{teamId}'.replace(new RegExp('{teamId}', 'g'), teamId);\n                let payload = {};\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('delete', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            }),\n            /**\n             * Get Team Memberships\n             *\n             * Get a team members by the team unique ID. All team members have read access\n             * for this list of resources.\n             *\n             * @param {string} teamId\n             * @param {string} search\n             * @param {number} limit\n             * @param {number} offset\n             * @param {string} orderType\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            getMemberships: (teamId, search = '', limit = 25, offset = 0, orderType = 'ASC') => __awaiter(this, void 0, void 0, function* () {\n                if (teamId === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"teamId\"');\n                }\n                let path = '/teams/{teamId}/memberships'.replace(new RegExp('{teamId}', 'g'), teamId);\n                let payload = {};\n                if (search) {\n                    payload['search'] = search;\n                }\n                if (limit) {\n                    payload['limit'] = limit;\n                }\n                if (offset) {\n                    payload['offset'] = offset;\n                }\n                if (orderType) {\n                    payload['orderType'] = orderType;\n                }\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('get', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            }),\n            /**\n             * Create Team Membership\n             *\n             * Use this endpoint to invite a new member to join your team. An email with a\n             * link to join the team will be sent to the new member email address if the\n             * member doesn't exist in the project it will be created automatically.\n             *\n             * Use the 'URL' parameter to redirect the user from the invitation email back\n             * to your app. When the user is redirected, use the [Update Team Membership\n             * Status](/docs/client/teams#teamsUpdateMembershipStatus) endpoint to allow\n             * the user to accept the invitation to the team.\n             *\n             * Please note that in order to avoid a [Redirect\n             * Attacks](https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.md)\n             * the only valid redirect URL's are the once from domains you have set when\n             * added your platforms in the console interface.\n             *\n             * @param {string} teamId\n             * @param {string} email\n             * @param {string[]} roles\n             * @param {string} url\n             * @param {string} name\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            createMembership: (teamId, email, roles, url, name = '') => __awaiter(this, void 0, void 0, function* () {\n                if (teamId === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"teamId\"');\n                }\n                if (email === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"email\"');\n                }\n                if (roles === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"roles\"');\n                }\n                if (url === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"url\"');\n                }\n                let path = '/teams/{teamId}/memberships'.replace(new RegExp('{teamId}', 'g'), teamId);\n                let payload = {};\n                if (typeof email !== 'undefined') {\n                    payload['email'] = email;\n                }\n                if (typeof name !== 'undefined') {\n                    payload['name'] = name;\n                }\n                if (typeof roles !== 'undefined') {\n                    payload['roles'] = roles;\n                }\n                if (typeof url !== 'undefined') {\n                    payload['url'] = url;\n                }\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('post', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            }),\n            /**\n             * Delete Team Membership\n             *\n             * This endpoint allows a user to leave a team or for a team owner to delete\n             * the membership of any other team member. You can also use this endpoint to\n             * delete a user membership even if it is not accepted.\n             *\n             * @param {string} teamId\n             * @param {string} inviteId\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            deleteMembership: (teamId, inviteId) => __awaiter(this, void 0, void 0, function* () {\n                if (teamId === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"teamId\"');\n                }\n                if (inviteId === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"inviteId\"');\n                }\n                let path = '/teams/{teamId}/memberships/{inviteId}'.replace(new RegExp('{teamId}', 'g'), teamId).replace(new RegExp('{inviteId}', 'g'), inviteId);\n                let payload = {};\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('delete', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            }),\n            /**\n             * Update Team Membership Status\n             *\n             * Use this endpoint to allow a user to accept an invitation to join a team\n             * after being redirected back to your app from the invitation email recieved\n             * by the user.\n             *\n             * @param {string} teamId\n             * @param {string} inviteId\n             * @param {string} userId\n             * @param {string} secret\n             * @throws {AppwriteException}\n             * @return {Promise}\n             */\n            updateMembershipStatus: (teamId, inviteId, userId, secret) => __awaiter(this, void 0, void 0, function* () {\n                if (teamId === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"teamId\"');\n                }\n                if (inviteId === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"inviteId\"');\n                }\n                if (userId === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"userId\"');\n                }\n                if (secret === undefined) {\n                    throw new AppwriteException('Missing required parameter: \"secret\"');\n                }\n                let path = '/teams/{teamId}/memberships/{inviteId}/status'.replace(new RegExp('{teamId}', 'g'), teamId).replace(new RegExp('{inviteId}', 'g'), inviteId);\n                let payload = {};\n                if (typeof userId !== 'undefined') {\n                    payload['userId'] = userId;\n                }\n                if (typeof secret !== 'undefined') {\n                    payload['secret'] = secret;\n                }\n                const uri = new URL(this.config.endpoint + path);\n                return yield this.call('patch', uri, new Headers({\n                    'content-type': 'application/json',\n                }), payload);\n            })\n        };\n    }\n    /**\n     * Set Endpoint\n     *\n     * Your project ID\n     *\n     * @param {string} endpoint\n     *\n     * @returns {this}\n     */\n    setEndpoint(endpoint) {\n        this.config.endpoint = endpoint;\n        return this;\n    }\n    call(method, url, headers = new Headers(), params = {}) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            method = method.toUpperCase();\n            this.headers.forEach((value, key) => {\n                headers.set(key, value);\n            });\n            let options = {\n                method,\n                headers,\n                credentials: 'include'\n            };\n            if (window.localStorage) {\n                headers.set('X-Fallback-Cookies', (_a = window.localStorage.getItem('cookieFallback')) !== null && _a !== void 0 ? _a : \"\");\n            }\n            if (method === 'GET') {\n                url.search = new URLSearchParams(this.flatten(params)).toString();\n            }\n            else {\n                switch (headers.get('content-type')) {\n                    case 'application/json':\n                        options.body = JSON.stringify(params);\n                        break;\n                    case 'multipart/form-data':\n                        let formData = new FormData();\n                        for (const key in params) {\n                            formData.append(key + (Array.isArray(params[key]) ? '[]' : ''), params[key]);\n                        }\n                        options.body = formData;\n                        headers.delete('content-type');\n                        break;\n                }\n            }\n            try {\n                const response = yield fetch(url.toString(), options);\n                const data = yield response.json();\n                if (400 <= response.status) {\n                    throw new AppwriteException(data.message, response.status, data);\n                }\n                const cookieFallback = response.headers.get('X-Fallback-Cookies');\n                if (window.localStorage && cookieFallback) {\n                    window.console.warn('Appwrite is using localStorage for session management. Increase your security by adding a custom domain as your API endpoint.');\n                    window.localStorage.setItem('cookieFallback', cookieFallback);\n                }\n                return data;\n            }\n            catch (e) {\n                throw new AppwriteException(e.message);\n            }\n        });\n    }\n    flatten(data, prefix = '') {\n        let output = {};\n        for (const key in data) {\n            let value = data[key];\n            let finalKey = prefix ? prefix + '[' + key + ']' : key;\n            if (Array.isArray(value)) {\n                output = Object.assign(output, this.flatten(value, finalKey)); // @todo: handle name collision here if needed\n            }\n            else {\n                output[finalKey] = value;\n            }\n        }\n        return output;\n    }\n}\n;\n"],"names":["this"],"mappings":"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"}